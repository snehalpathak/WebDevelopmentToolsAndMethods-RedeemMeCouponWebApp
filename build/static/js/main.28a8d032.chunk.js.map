{"version":3,"sources":["spinner.svg","context/CouponContext.js","Login.jsx","Nav.jsx","context/messages.js","UserCoupons.jsx","context/constants.js","CouponDetails.jsx","Categories.js","CategoryFilter.jsx","Refresh.jsx","Coupon.jsx","AddCoupon.jsx","Admin.jsx","App.jsx","serviceWorker.js","context/CouponReducer.js","context/types.js","services.js","context/CouponState.js","index.js"],"names":["module","exports","CouponContext","React","createContext","Login","couponContext","useContext","useState","username","setUsername","isLoading","setIsLoading","setLoginStatus","networkError","className","placeholder","onChange","e","target","value","alt","src","spinner","onClick","Nav","isLoggedIn","setLogout","preventDefault","messages","DEFAULT","USERNAME_REQUIRED","NETWORK_ERROR","LOGIN_TO_SAVE","FIELD_REQUIRED","COUPON_SAVED","DATA_EMPTY","COPIED","UPDATE_SUCCESS","UPDATE_FAILED","DELETE_SUCCESS","UserCoupons","getUserCoupons","removeUserCoupon","userCoupons","alert","setShowFav","couponFilter","setAlert","useEffect","performDelete","id","dataset","copyToClipboard","coupon","navigator","clipboard","writeText","code","Object","values","filter","type","map","index","key","data-id","couponId","name","description","CouponDetails","allCoupons","setShowCouponDetails","categories","CategoryFilter","setCategoryFilter","category","Refresh","getAllCoupons","Coupon","setId","addUserCoupons","showFav","isCouponDetails","addCouponToFavorites","showCouponDetails","AddCoupon","onSetComponent","addCoupons","setName","setCode","setType","desc","setDesc","Admin","updateCoupons","updateCouponState","deleteCoupon","isAddComponent","setIsAddComponent","updateCouponDetails","performUpdate","status","App","content","getLoginStatus","isAdmin","Boolean","window","location","hostname","match","CouponReducer","state","action","updatedDataId","data","message","coupons","convertNetworkError","err","checkResponse","response","ok","json","then","Promise","reject","CouponState","props","initialState","useReducer","dispatch","checkDetails","updateNetworkError","errMsg","Provider","fetch","method","catch","userInfo","headers","Headers","body","JSON","stringify","fetchLogin","couponInfo","fetchRemoveUserCoupon","oldCoupon","filterValue","children","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.28a8d032.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.414a23f5.svg\";","import React from 'react';\r\n\r\nconst CouponContext = React.createContext({});\r\n\r\nexport default CouponContext;","import React, { useState, useContext } from 'react';\r\nimport spinner from './spinner.svg';\r\nimport CouponContext from './context/CouponContext';\r\nconst Login = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const [username, setUsername] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { setLoginStatus, networkError } = couponContext;\r\n\r\n  const performLogin = () => {\r\n    setIsLoading(true);\r\n    setLoginStatus(username);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <input\r\n        className=\"user-info\"\r\n        placeholder=\"Enter User name\"\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      {isLoading ? (\r\n        <img alt=\"spinner\" src={spinner} />\r\n      ) : (\r\n        <button className=\"to-login\" onClick={performLogin}>\r\n          Login\r\n        </button>\r\n      )}\r\n      <div className=\"error-msg\">{networkError}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\n\r\nimport CouponContext from './context/CouponContext';\r\n\r\nconst Nav = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const { isLoggedIn, setLogout, username } = couponContext;\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    setLogout();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav\">\r\n        {isLoggedIn && <li>Welcome, {username}</li>}\r\n        {isLoggedIn && (\r\n          <li className=\"logout action\" onClick={logout}>\r\n            Logout\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","const messages = {\r\n    DEFAULT: 'Something went wrong, please try again!!!',\r\n    USERNAME_REQUIRED: '* Username is required',\r\n    NETWORK_ERROR: 'There was a problem reaching your network, please try again!!!',\r\n    LOGIN_TO_SAVE: 'Please login to save your coupons',\r\n    FIELD_REQUIRED: '*All fields are required',\r\n    COUPON_SAVED: 'Coupon successfully saved!',\r\n    DATA_EMPTY: 'Data fields cannot be empty!',\r\n    COPIED: 'Copied!!!',\r\n    UPDATE_SUCCESS: 'Data updated successfully!',\r\n    UPDATE_FAILED: 'Update failed! Data is updated for wrong entry',\r\n    DELETE_SUCCESS: 'Data deleted successfully!',\r\n    'no valid session': 'No Session found! Please login again.',\r\n    'login denied': '*Login denied. Please use valid user name',\r\n    'action not permitted': 'Unauthorized user. Please try valid username!!!',\r\n    'no tasks for user': 'No tasks found!!!',\r\n    'no such couponId': 'Error! Coupon does not exist.',\r\n    'failed to update': 'Failed to update task! Please enter correct data.',\r\n};\r\n\r\nexport default messages;","import React, { useContext, useEffect } from 'react';\r\nimport CouponContext from './context/CouponContext';\r\nimport { ALL, TRUE } from './context/constants';\r\nimport messages from './context/messages';\r\n\r\nconst UserCoupons = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const {\r\n    getUserCoupons,\r\n    removeUserCoupon,\r\n    userCoupons,\r\n    alert,\r\n    setShowFav,\r\n    couponFilter,\r\n    setAlert,\r\n  } = couponContext;\r\n\r\n  useEffect(() => {\r\n    getUserCoupons();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const performDelete = (e) => {\r\n    e.preventDefault();\r\n    const id = e.target.dataset.id;\r\n    removeUserCoupon(id);\r\n  };\r\n\r\n  const performReturn = (e) => {\r\n    e.preventDefault();\r\n    setShowFav(false);\r\n  };\r\n\r\n  const copyToClipboard = (e) => {\r\n    e.preventDefault();\r\n    const coupon = userCoupons[e.target.dataset.id];\r\n    navigator.clipboard.writeText(coupon.code);\r\n    setAlert(messages.COPIED);\r\n  };\r\n\r\n  return (\r\n    <div className=\"coupons-container\">\r\n      <h4 className=\"user-coupon-header\">Saved Coupons</h4>\r\n      <button className=\"btn-back\" onClick={performReturn}>\r\n        Back\r\n      </button>\r\n      <p className=\"error-msg\">{alert}</p>\r\n      <div className=\"coupon-container\">\r\n        {Object.values(userCoupons)\r\n          .filter((coupon) =>\r\n            couponFilter === ALL ? TRUE : coupon.type === couponFilter\r\n          )\r\n          .map((coupon, index) => (\r\n            <div key={index} className=\"coupon-details\">\r\n              <button\r\n                className=\"btn-delete\"\r\n                data-id={coupon.couponId}\r\n                onClick={performDelete}\r\n              >\r\n                X\r\n              </button>\r\n              <h3 data-id={coupon.couponId}> {coupon.name}</h3>\r\n              <h4 data-id={coupon.couponId}> CODE : '{coupon.code}'</h4>\r\n              <p data-id={coupon.couponId}> {coupon.description}</p>\r\n              <button\r\n                data-id={coupon.couponId}\r\n                className=\"copy-btn\"\r\n                onClick={copyToClipboard}\r\n              >\r\n                Copy to Clipboard\r\n              </button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCoupons;\r\n","export const ADMIN = 'admin';\r\nexport const DONE = 'done';\r\nexport const ALL = 'All';\r\nexport const SELECT = 'select option';\r\nexport const ACTIVE = 'active';\r\nexport const COMPLETE = 'complete';\r\nexport const ASCENDING = 'ascending';\r\nexport const DESCENDING = 'descending';\r\nexport const NOTDONE = 'notdone';\r\nexport const DEFAULT_THEME = 'light';\r\nexport const TRUE = true;\r\nexport const FALSE = false;\r\nexport const NAME = 'name';\r\nexport const CODE = 'code';\r\nexport const TYPE = 'type';\r\nexport const DESC = 'desc';\r\nexport const NO_ID_FOUND = 'no such couponId';\r\nexport const NO_VALID_SESSION = 'no valid session';","import React, { useContext } from 'react';\r\nimport CouponContext from './context/CouponContext';\r\nimport { FALSE } from './context/constants';\r\nimport messages from './context/messages';\r\n\r\nconst CouponDetails = ({ couponId }) => {\r\n  const couponContext = useContext(CouponContext);\r\n  const { allCoupons, setShowCouponDetails, alert, setAlert } = couponContext;\r\n  const coupon = allCoupons[couponId];\r\n\r\n  const performReturn = (e) => {\r\n    e.preventDefault();\r\n    setShowCouponDetails(FALSE);\r\n  };\r\n\r\n  const copyToClipboard = (e) => {\r\n    e.preventDefault();\r\n    navigator.clipboard.writeText(coupon.code);\r\n    setAlert(messages.COPIED);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn-back\" onClick={performReturn}>\r\n        Back\r\n      </button>\r\n      <div className=\"coupon-details-container\">\r\n        <p className=\"copy-text\">{alert}</p>\r\n        <h3>{coupon.name}</h3>\r\n        <p>{coupon.description}</p>\r\n        <h4>CODE: '{coupon.code}'</h4>\r\n        <button className=\"copy-btn\" onClick={copyToClipboard}>\r\n          Copy to Clipboard\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CouponDetails;\r\n","const categories = [\r\n    'All',\r\n    'Clothing',\r\n    'Beauty',\r\n    'Health',\r\n    'Electronics',\r\n    'Restaurants',\r\n    'Shoes',\r\n    'Home',\r\n    'Pets',\r\n    'Gift',\r\n]\r\n\r\nexport default categories;","import React from 'react';\r\nimport categories from './Categories';\r\nimport { useContext } from 'react';\r\nimport CouponContext from './context/CouponContext';\r\nconst CategoryFilter = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const { couponFilter, setCategoryFilter } = couponContext;\r\n\r\n  const setFilterbyCategory = (e) => {\r\n    setCategoryFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"category-filter\">\r\n      <label className=\"select-label\">Select by Category: </label>\r\n      <select value={couponFilter} onChange={setFilterbyCategory}>\r\n        {categories.map((category, index) => (\r\n          <option key={index} value={category}>\r\n            {category}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryFilter;\r\n","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport CouponContext from './context/CouponContext';\r\n\r\nconst Refresh = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const { getAllCoupons } = couponContext;\r\n\r\n  const performRefresh = (e) => {\r\n    e.preventDefault();\r\n    getAllCoupons();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn-refresh\" onClick={performRefresh}>\r\n        Refresh\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Refresh;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport UserCoupons from './UserCoupons';\r\nimport CouponContext from './context/CouponContext';\r\nimport messages from './context/messages';\r\nimport { TRUE, ALL } from './context/constants';\r\nimport CouponDetails from './CouponDetails';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport Refresh from './Refresh';\r\n\r\nconst Coupon = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const [id, setId] = useState('');\r\n\r\n  const {\r\n    getAllCoupons,\r\n    allCoupons,\r\n    addUserCoupons,\r\n    isLoggedIn,\r\n    alert,\r\n    setAlert,\r\n    showFav,\r\n    setShowFav,\r\n    isCouponDetails,\r\n    setShowCouponDetails,\r\n    couponFilter,\r\n  } = couponContext;\r\n\r\n  useEffect(() => {\r\n    getAllCoupons();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const addCouponToFavorites = (e) => {\r\n    const id = e.target.dataset.id;\r\n    if (isLoggedIn) {\r\n      addUserCoupons(id);\r\n    } else {\r\n      setAlert(messages.LOGIN_TO_SAVE);\r\n    }\r\n  };\r\n\r\n  const showUserFavorites = () => {\r\n    setShowFav(true);\r\n  };\r\n\r\n  const showCouponDetails = (e) => {\r\n    const id = e.target.dataset.id;\r\n    setId(id);\r\n    setShowCouponDetails(TRUE);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isCouponDetails && <CategoryFilter />}\r\n      {showFav && <UserCoupons />}\r\n      {!showFav && isCouponDetails && <CouponDetails couponId={id} />}\r\n      {!showFav && !isCouponDetails && <Refresh />}\r\n      {!showFav && !isCouponDetails && (\r\n        <div className=\"coupons-container\">\r\n          {isLoggedIn && (\r\n            <button onClick={showUserFavorites}>My Coupons</button>\r\n          )}\r\n          <p className=\"error-msg\">{alert}</p>\r\n          <div className=\"coupon-container\">\r\n            {Object.values(allCoupons)\r\n              .filter((coupon) =>\r\n                couponFilter === ALL ? TRUE : coupon.type === couponFilter\r\n              )\r\n              .map((coupon, index) => (\r\n                <div key={index} className=\"coupon-details\">\r\n                  <h3 data-id={coupon.couponId}>{coupon.name}</h3>\r\n                  <p data-id={coupon.couponId}>{coupon.description}</p>\r\n                  <button\r\n                    className=\"coupon-btn\"\r\n                    data-id={coupon.couponId}\r\n                    onClick={showCouponDetails}\r\n                  >\r\n                    SHOW CODE\r\n                  </button>\r\n                  <button\r\n                    data-id={coupon.couponId}\r\n                    onClick={addCouponToFavorites}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coupon;\r\n","import React, { useState, useContext } from 'react';\r\nimport CouponContext from './context/CouponContext';\r\nimport categories from './Categories';\r\n\r\nconst AddCoupon = ({ onSetComponent }) => {\r\n  const couponContext = useContext(CouponContext);\r\n  const { addCoupons, setAlert } = couponContext;\r\n\r\n  const [name, setName] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const performAddCupon = (e) => {\r\n    e.preventDefault();\r\n    setAlert('');\r\n    if (addCoupons(name, code, type, desc)) {\r\n      onSetComponent(false);\r\n    }\r\n  };\r\n\r\n  const performReturnToHome = () => {\r\n    onSetComponent(false);\r\n    setAlert('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-coupon\">\r\n      <button className=\"btn-back\" onClick={performReturnToHome}>\r\n        Back\r\n      </button>\r\n      <div className=\"add-form\">\r\n        <input\r\n          className=\"form-elements\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"name goes here\"\r\n        />\r\n        <input\r\n          className=\"form-elements\"\r\n          type=\"text\"\r\n          value={code}\r\n          onChange={(e) => setCode(e.target.value)}\r\n          placeholder=\"coupon code  goes here\"\r\n        />\r\n        <div>\r\n          <select\r\n            className=\"form-elements\"\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n          >\r\n            {categories.map((category, index) => (\r\n              <option key={index} value={category}>\r\n                {category}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <textarea\r\n          className=\"form-elements-area\"\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={(e) => setDesc(e.target.value)}\r\n          placeholder=\"coupon description goes here\"\r\n        />\r\n      </div>\r\n      <button onClick={performAddCupon}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCoupon;\r\n","import React, { useContext, useState } from 'react';\r\nimport CouponContext from './context/CouponContext';\r\nimport AddCoupon from './AddCoupon';\r\nimport { NAME, CODE, TYPE, DESC, ALL, TRUE } from './context/constants';\r\nimport categories from './Categories';\r\nimport Refresh from './Refresh';\r\n\r\nconst Admin = () => {\r\n  const couponContext = useContext(CouponContext);\r\n  const {\r\n    allCoupons,\r\n    updateCoupons,\r\n    updateCouponState,\r\n    deleteCoupon,\r\n    alert,\r\n    setAlert,\r\n    couponFilter,\r\n  } = couponContext;\r\n  const [isAddComponent, setIsAddComponent] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const setAddCoupon = (e) => {\r\n    e.preventDefault();\r\n    setAlert('');\r\n    setIsAddComponent(true);\r\n  };\r\n\r\n  const updateCouponDetails = (id, value, type) => {\r\n    switch (type) {\r\n      case NAME:\r\n        updateCouponState(NAME, id, value);\r\n        return setName(value);\r\n      case CODE:\r\n        updateCouponState(CODE, id, value);\r\n        return setCode(value);\r\n      case TYPE:\r\n        updateCouponState(TYPE, id, value);\r\n        return setType(value);\r\n      case DESC:\r\n        updateCouponState(DESC, id, value);\r\n        return setDesc(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const performUpdate = (e) => {\r\n    e.preventDefault();\r\n    updateCoupons(e.target.dataset.id, name, code, type, desc);\r\n    setName('');\r\n    setCode('');\r\n    setType('');\r\n    setDesc('');\r\n  };\r\n\r\n  const performDelete = (e) => {\r\n    e.preventDefault();\r\n    deleteCoupon(e.target.dataset.id);\r\n  };\r\n\r\n  const setAddComponent = (status) => {\r\n    setIsAddComponent(status);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isAddComponent && <AddCoupon onSetComponent={setAddComponent} />}\r\n      <p className=\"error-msg\">{alert}</p>\r\n      {!isAddComponent && (\r\n        <div>\r\n          <div>\r\n            <button className=\"btn-add\" onClick={setAddCoupon}>\r\n              ADD\r\n            </button>\r\n            <Refresh />\r\n          </div>\r\n          <div className=\"admin-coupon-container\">\r\n            <div className=\"admin-label-container\">\r\n              <span className=\"header-name\">Coupon Name</span>\r\n              <span className=\"header-code\">Code</span>\r\n              <span className=\"header-label\">Type</span>\r\n              <span className=\"header-desc\">Description</span>\r\n            </div>\r\n            {Object.values(allCoupons)\r\n              .filter((coupon) =>\r\n                couponFilter === ALL ? TRUE : coupon.type === couponFilter\r\n              )\r\n              .map((coupon, index) => (\r\n                <div key={index} className=\"admin-list\">\r\n                  <input\r\n                    className=\"coupon-items input-height\"\r\n                    data-id={coupon.couponId}\r\n                    type=\"text\"\r\n                    value={coupon.name}\r\n                    onChange={(e) =>\r\n                      updateCouponDetails(\r\n                        e.target.dataset.id,\r\n                        e.target.value,\r\n                        NAME\r\n                      )\r\n                    }\r\n                  />\r\n                  <input\r\n                    className=\"coupon-items input-height\"\r\n                    data-id={coupon.couponId}\r\n                    value={coupon.code}\r\n                    onChange={(e) =>\r\n                      updateCouponDetails(\r\n                        e.target.dataset.id,\r\n                        e.target.value,\r\n                        CODE\r\n                      )\r\n                    }\r\n                  />\r\n                  <select\r\n                    className=\"coupon-items\"\r\n                    data-id={coupon.couponId}\r\n                    value={coupon.type}\r\n                    onChange={(e) =>\r\n                      updateCouponDetails(\r\n                        e.target.dataset.id,\r\n                        e.target.value,\r\n                        TYPE\r\n                      )\r\n                    }\r\n                  >\r\n                    {categories.map((category, index) => (\r\n                      <option key={index} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <textarea\r\n                    className=\"coupon-items-textarea\"\r\n                    data-id={coupon.couponId}\r\n                    value={coupon.description}\r\n                    onChange={(e) =>\r\n                      updateCouponDetails(\r\n                        e.target.dataset.id,\r\n                        e.target.value,\r\n                        DESC\r\n                      )\r\n                    }\r\n                  />\r\n                  <button\r\n                    className=\"coupon-items btn-lg\"\r\n                    data-id={coupon.couponId}\r\n                    onClick={performUpdate}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  <button\r\n                    className=\"coupon-items btn-lg\"\r\n                    data-id={coupon.couponId}\r\n                    onClick={performDelete}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useContext, useEffect, Fragment } from 'react';\r\nimport './app.css';\r\nimport CouponContext from './context/CouponContext';\r\nimport Login from './Login';\r\nimport Nav from './Nav';\r\nimport Coupon from './Coupon';\r\nimport Admin from './Admin';\r\n\r\nfunction App() {\r\n  const couponContext = useContext(CouponContext);\r\n  const { isLoggedIn, getLoginStatus, isAdmin } = couponContext;\r\n\r\n  useEffect(() => {\r\n    getLoginStatus();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let content;\r\n\r\n  if (isLoggedIn) {\r\n    if (isAdmin) {\r\n      content = (\r\n        <Fragment>\r\n          <Nav />\r\n          <Admin />\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      content = (\r\n        <Fragment>\r\n          <Nav />\r\n          <Coupon />\r\n        </Fragment>\r\n      );\r\n    }\r\n  } else {\r\n    content = (\r\n      <Fragment>\r\n        <Login />\r\n        <Coupon />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <p className=\"header\"></p>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n    FALSE,\r\n    TRUE,\r\n    ADMIN,\r\n    ALL\r\n} from './constants';\r\n\r\nimport {\r\n    GET_SESSION,\r\n    SET_SESSION,\r\n    SET_LOGOUT,\r\n    NETWORK_ERROR,\r\n    GET_COUPONS,\r\n    ADD_USER_COUPON,\r\n    GET_USER_COUPON,\r\n    DELETE_USER_COUPON,\r\n    ADD_COUPON,\r\n    UPDATE_COUPON,\r\n    SET_ALERT,\r\n    UPDATE_NAME,\r\n    UPDATE_CODE,\r\n    UPDATE_TYPE,\r\n    UPDATE_DESC,\r\n    DELETE_COUPON,\r\n    SHOW_FAV,\r\n    SHOW_COUPON_DETAILS,\r\n    CATEGORY_FILTER,\r\n} from './types';\r\n\r\nimport messages from './messages';\r\n\r\nconst CouponReducer = (state, action) => {\r\n    state = { ...state, couponFilter: ALL, networkError: '', alert: '', updatedDataId: '' }\r\n    switch (action.type) {\r\n        case GET_SESSION:\r\n            if (!action.data.username) {\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn: FALSE,\r\n                }\r\n            }\r\n            if (action.data.username === ADMIN) {\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn: TRUE,\r\n                    isAdmin: TRUE,\r\n                    username: action.data.username,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn: TRUE,\r\n                    username: action.data.username,\r\n                }\r\n            }\r\n        case SET_SESSION:\r\n            return {\r\n                ...state,\r\n                username: action.data.username,\r\n                isAdmin: action.data.isAdmin,\r\n                isLoggedIn: TRUE\r\n            }\r\n        case SET_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: FALSE,\r\n                showFav: FALSE,\r\n                isCouponDetails: FALSE\r\n            }\r\n        case GET_COUPONS:\r\n            return {\r\n                ...state,\r\n                allCoupons: action.data\r\n            }\r\n        case GET_USER_COUPON:\r\n            return {\r\n                ...state,\r\n                userCoupons: action.data\r\n            }\r\n        case ADD_USER_COUPON:\r\n            return {\r\n                ...state,\r\n                userCoupons: {\r\n                    ...state.userCoupons,\r\n                    [action.data.couponId]: action.data,\r\n                },\r\n                alert: messages.COUPON_SAVED\r\n            }\r\n        case DELETE_USER_COUPON:\r\n            return {\r\n                ...state,\r\n                userCoupons: action.data,\r\n            }\r\n        case UPDATE_COUPON:\r\n            return {\r\n                ...state,\r\n                allCoupons: {\r\n                    ...state.allCoupons,\r\n                    [action.data.couponId]: {\r\n                        name: action.data.coupon.name,\r\n                        code: action.data.coupon.code,\r\n                        type: action.data.coupon.type,\r\n                        description: action.data.coupon.description,\r\n                        couponId: action.data.couponId\r\n                    }\r\n                },\r\n                alert: action.data.message\r\n            }\r\n        case DELETE_COUPON:\r\n            return {\r\n                ...state,\r\n                allCoupons: action.data.coupons,\r\n                alert: action.data.message\r\n            }\r\n        case ADD_COUPON:\r\n            return {\r\n                ...state,\r\n                allCoupons: {\r\n                    ...state.allCoupons,\r\n                    [action.data.couponId]: action.data\r\n                }\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: action.data\r\n            }\r\n        case SHOW_FAV:\r\n            return {\r\n                ...state,\r\n                showFav: action.data\r\n            }\r\n        case SHOW_COUPON_DETAILS:\r\n            return {\r\n                ...state,\r\n                isCouponDetails: action.data\r\n            }\r\n        case UPDATE_NAME:\r\n            return {\r\n                ...state,\r\n                allCoupons: {\r\n                    ...state.allCoupons,\r\n                    [action.data.coupon.couponId]: { ...action.data.coupon, name: action.data.value }\r\n                },\r\n                updatedDataId: action.data.id\r\n            }\r\n        case UPDATE_CODE:\r\n            return {\r\n                ...state,\r\n                allCoupons: {\r\n                    ...state.allCoupons,\r\n                    [action.data.coupon.couponId]: { ...action.data.coupon, code: action.data.value }\r\n                },\r\n                updatedDataId: action.data.id\r\n            }\r\n        case UPDATE_TYPE:\r\n            return {\r\n                ...state,\r\n                allCoupons: {\r\n                    ...state.allCoupons,\r\n                    [action.data.coupon.couponId]: { ...action.data.coupon, type: action.data.value }\r\n                },\r\n                updatedDataId: action.data.id\r\n            }\r\n        case UPDATE_DESC:\r\n            return {\r\n                ...state,\r\n                allCoupons: {\r\n                    ...state.allCoupons,\r\n                    [action.data.coupon.couponId]: { ...action.data.coupon, description: action.data.value }\r\n                },\r\n                updatedDataId: action.data.id\r\n            }\r\n        case CATEGORY_FILTER:\r\n            return {\r\n                ...state,\r\n                couponFilter: action.data\r\n            }\r\n        case NETWORK_ERROR:\r\n            return {\r\n                ...state,\r\n                networkError: action.data,\r\n                isLoggedIn: FALSE\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CouponReducer;","export const SET_SESSION = 'SET_SESSION';\r\nexport const GET_SESSION = 'GET_SESSION';\r\nexport const SET_LOGOUT = 'SET_LOGOUT';\r\nexport const GET_COUPONS = 'GET_COUPONS';\r\nexport const ADD_COUPON = 'ADD_COUPON';\r\nexport const UPDATE_COUPON = 'UPDATE_COUPON';\r\nexport const DELETE_COUPON = 'DELETE_COUPON';\r\nexport const ADD_USER_COUPON = 'ADD_USER_COUPON';\r\nexport const GET_USER_COUPON = 'GET_USER_COUPON';\r\nexport const DELETE_USER_COUPON = 'DELETE_USER_COUPON';\r\nexport const REPORT_ERROR = 'REPORT_ERROR';\r\nexport const NETWORK_ERROR = 'NETWORK_ERROR';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const UPDATE_NAME = 'UPDATE_NAME';\r\nexport const UPDATE_CODE = 'UPDATE_CODE';\r\nexport const UPDATE_TYPE = 'UPDATE_TYPE';\r\nexport const UPDATE_DESC = 'UPDATE_DESC';\r\nexport const SHOW_FAV = 'SHOW_FAV';\r\nexport const SHOW_COUPON_DETAILS = 'SHOW_COUPON_DETAILS';\r\nexport const CATEGORY_FILTER = 'CATEGORY_FILTER';","const convertNetworkError = (err) => {\r\n    return {\r\n        code: 'network',\r\n        err\r\n    };\r\n};\r\n\r\nconst checkResponse = (response) => {\r\n    if (!response.ok) {\r\n        return response.json().then((err) => Promise.reject(err));\r\n    }\r\n    return response.json();\r\n}\r\n\r\nexport const fetchLoginStatus = () => {\r\n    return fetch('/session', {\r\n        method: 'GET',\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchLogin = (username) => {\r\n    return fetch('/session', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ username }),\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchLogout = () => {\r\n    return fetch('/session', {\r\n        method: 'DELETE',\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchCoupons = () => {\r\n    return fetch('/coupons', {\r\n        method: 'GET',\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}\r\n\r\nexport const fetchUserCoupons = (username) => {\r\n    return fetch(`/coupons/${username}`, {\r\n        method: 'GET'\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}\r\n\r\nexport const fetchAddUserCoupons = (username, couponId, coupons) => {\r\n    return fetch(`/coupons/${username}/${couponId}`, {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ coupons })\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}\r\n\r\nexport const fetchRemoveUserCoupon = (username, couponId) => {\r\n    return fetch(`/coupons/${username}/${couponId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}\r\n\r\nexport const fetchAddCoupons = (username, coupons) => {\r\n    return fetch(`/coupons/${username}`, {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ coupons })\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}\r\n\r\nexport const fetchUpdateCoupons = (username, couponId, coupons) => {\r\n    return fetch(`/coupons/${username}/${couponId}`, {\r\n        method: 'PUT',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ coupons })\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}\r\n\r\nexport const fetchDeleteCoupon = (couponId) => {\r\n    return fetch(`/coupons/${couponId}`, {\r\n        method: 'DELETE',\r\n    })\r\n        .catch(convertNetworkError)\r\n        .then((checkResponse))\r\n}","import React, { useReducer } from 'react';\r\nimport CouponReducer from './CouponReducer';\r\nimport messages from './messages';\r\nimport {\r\n    GET_SESSION,\r\n    SET_SESSION,\r\n    SET_LOGOUT,\r\n    NETWORK_ERROR,\r\n    GET_COUPONS,\r\n    ADD_USER_COUPON,\r\n    ADD_COUPON,\r\n    SET_ALERT,\r\n    UPDATE_COUPON,\r\n    UPDATE_NAME,\r\n    UPDATE_CODE,\r\n    UPDATE_TYPE,\r\n    UPDATE_DESC,\r\n    DELETE_COUPON,\r\n    GET_USER_COUPON,\r\n    DELETE_USER_COUPON,\r\n    SHOW_FAV,\r\n    SHOW_COUPON_DETAILS,\r\n    CATEGORY_FILTER,\r\n} from './types';\r\n\r\nimport {\r\n    fetchLoginStatus,\r\n    fetchLogin,\r\n    fetchLogout,\r\n    fetchCoupons,\r\n    fetchAddUserCoupons,\r\n    fetchUserCoupons,\r\n    fetchRemoveUserCoupon,\r\n    fetchUpdateCoupons,\r\n    fetchAddCoupons,\r\n    fetchDeleteCoupon\r\n} from '../services';\r\nimport CouponContext from './CouponContext';\r\n\r\nimport { ADMIN, NAME, CODE, TYPE, DESC, NO_ID_FOUND, FALSE, ALL, NO_VALID_SESSION } from './constants';\r\n\r\nconst CouponState = (props) => {\r\n\r\n    const initialState = {\r\n        isLoggedIn: FALSE,\r\n        isAdmin: FALSE,\r\n        username: '',\r\n        allCoupons: {},\r\n        userCoupons: {},\r\n        networkError: '',\r\n        alert: '',\r\n        showFav: FALSE,\r\n        isCouponDetails: FALSE,\r\n        couponFilter: ALL,\r\n        updatedDataId: '',\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(CouponReducer, initialState);\r\n\r\n    const getLoginStatus = () => {\r\n        fetchLoginStatus().then((userInfo) => {\r\n            dispatch({ type: GET_SESSION, data: userInfo.data });\r\n        })\r\n            .catch((err) => {\r\n                if (err.code !== NO_VALID_SESSION) {\r\n                    updateNetworkError(messages[err.code]);\r\n                }\r\n            });\r\n    }\r\n\r\n    const setLoginStatus = (username) => {\r\n        if (!username) {\r\n            updateNetworkError(messages.USERNAME_REQUIRED);\r\n        } else {\r\n            fetchLogin(username)\r\n                .then(() => {\r\n                    if (username === ADMIN) {\r\n                        dispatch({ type: SET_SESSION, data: { username: username, isAdmin: true } });\r\n                    } else {\r\n                        dispatch({ type: SET_SESSION, data: { username: username, isAdmin: false } });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    updateNetworkError(messages[err.code]);\r\n                });\r\n        }\r\n    }\r\n\r\n    const setLogout = () => {\r\n        fetchLogout()\r\n            .then(() => {\r\n                dispatch({ type: SET_LOGOUT })\r\n            })\r\n            .catch(err => {\r\n                updateNetworkError(messages[err.code]);\r\n            });\r\n    }\r\n\r\n    const getAllCoupons = () => {\r\n        fetchCoupons()\r\n            .then((couponInfo) => {\r\n                dispatch({ type: GET_COUPONS, data: couponInfo.data })\r\n            })\r\n            .catch(err => {\r\n                updateNetworkError(messages[err.code]);\r\n            });\r\n    }\r\n\r\n    const addCoupons = (name, code, type, desc) => {\r\n        if (checkDetails(name, code, type, desc)) {\r\n            const coupon = {\r\n                name: name,\r\n                code: code,\r\n                type: type,\r\n                description: desc\r\n            }\r\n            fetchAddCoupons(state.username, coupon)\r\n                .then((couponInfo) => {\r\n                    dispatch({ type: ADD_COUPON, data: couponInfo.data });\r\n                })\r\n                .catch(err => {\r\n                    updateNetworkError(messages[err.code]);\r\n                });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const updateCoupons = (id, name, code, type, desc) => {\r\n        const oldCoupon = state.allCoupons[id];\r\n\r\n        if ((!name && !oldCoupon.name) || (!code && !oldCoupon.code) || (!type && !oldCoupon.type) || (!desc && !oldCoupon.description)) {\r\n            dispatch({ type: SET_ALERT, data: messages.DATA_EMPTY });\r\n        } else if (state.updatedDataId && id !== state.updatedDataId) {\r\n            dispatch({ type: SET_ALERT, data: messages.UPDATE_FAILED });\r\n        } else {\r\n            const coupon = {\r\n                name: name || oldCoupon.name,\r\n                code: code || oldCoupon.code,\r\n                type: type || oldCoupon.type,\r\n                description: desc || oldCoupon.description\r\n            }\r\n            fetchUpdateCoupons(state.username, id, coupon)\r\n                .then(() => {\r\n                    dispatch({ type: UPDATE_COUPON, data: { coupon: coupon, couponId: id, message: messages.UPDATE_SUCCESS } });\r\n                })\r\n                .catch(err => {\r\n                    updateNetworkError(messages[err.code]);\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteCoupon = (id) => {\r\n        fetchDeleteCoupon(id)\r\n            .then(() => {\r\n                delete state.allCoupons[id];\r\n                dispatch({ type: DELETE_COUPON, data: { coupons: state.allCoupons, message: messages.DELETE_SUCCESS } })\r\n            })\r\n            .catch((err) => {\r\n                if (err.message === NO_ID_FOUND) {\r\n                    delete state.allCoupons[id];\r\n                    dispatch({ type: DELETE_COUPON, data: state.allCoupons })\r\n                    dispatch({ type: SET_ALERT, data: messages[err.message] })\r\n                } else {\r\n                    updateNetworkError(messages[err.code]);\r\n                }\r\n            })\r\n    }\r\n\r\n    const checkDetails = (name, code, type, desc) => {\r\n        if (!name || !code || !type || !desc) {\r\n            setAlert(messages.FIELD_REQUIRED);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const addUserCoupons = (id) => {\r\n        const coupon = state.allCoupons[id];\r\n        fetchAddUserCoupons(state.username, id, coupon)\r\n            .then((couponInfo) => {\r\n                dispatch({ type: ADD_USER_COUPON, data: couponInfo.data });\r\n            })\r\n            .catch(err => {\r\n                updateNetworkError(messages[err.code]);\r\n            });\r\n    }\r\n\r\n    const getUserCoupons = () => {\r\n        fetchUserCoupons(state.username)\r\n            .then((couponInfo) => {\r\n                dispatch({ type: GET_USER_COUPON, data: couponInfo.data });\r\n            })\r\n            .catch(err => {\r\n                updateNetworkError(messages[err.code]);\r\n            });\r\n    }\r\n\r\n    const removeUserCoupon = (couponId) => {\r\n        fetchRemoveUserCoupon(state.username, couponId)\r\n            .then((couponInfo) => {\r\n                delete state.userCoupons[couponId];\r\n                dispatch({ type: DELETE_USER_COUPON, data: state.userCoupons });\r\n            })\r\n            .catch(err => {\r\n                updateNetworkError(messages[err.code]);\r\n            });\r\n    }\r\n\r\n    const updateCouponState = (type, id, value) => {\r\n        const coupon = state.allCoupons[id];\r\n        switch (type) {\r\n            case NAME:\r\n                return dispatch({ type: UPDATE_NAME, data: { coupon, value, id } });\r\n            case CODE:\r\n                return dispatch({ type: UPDATE_CODE, data: { coupon, value, id } });\r\n            case TYPE:\r\n                return dispatch({ type: UPDATE_TYPE, data: { coupon, value, id } })\r\n            case DESC:\r\n                return dispatch({ type: UPDATE_DESC, data: { coupon, value, id } })\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const setShowFav = (status) => {\r\n        dispatch({ type: SHOW_FAV, data: status })\r\n    }\r\n\r\n    const setShowCouponDetails = (status) => {\r\n        dispatch({ type: SHOW_COUPON_DETAILS, data: status })\r\n    }\r\n\r\n    const setCategoryFilter = (filterValue) => {\r\n        dispatch({ type: CATEGORY_FILTER, data: filterValue })\r\n    }\r\n\r\n    const setAlert = (message) => {\r\n        dispatch({ type: SET_ALERT, data: message });\r\n    }\r\n\r\n    const updateNetworkError = (errMsg) => {\r\n        const errMessage = errMsg || messages.DEFAULT;\r\n        dispatch({ type: NETWORK_ERROR, data: errMessage });\r\n    }\r\n\r\n    return (\r\n        <CouponContext.Provider\r\n            value={{\r\n                isLoggedIn: state.isLoggedIn,\r\n                isAdmin: state.isAdmin,\r\n                username: state.username,\r\n                allCoupons: state.allCoupons,\r\n                userCoupons: state.userCoupons,\r\n                networkError: state.networkError,\r\n                alert: state.alert,\r\n                showFav: state.showFav,\r\n                isCouponDetails: state.isCouponDetails,\r\n                couponFilter: state.couponFilter,\r\n                updatedDataId: state.updatedDataId,\r\n                getLoginStatus,\r\n                setLoginStatus,\r\n                setLogout,\r\n                getAllCoupons,\r\n                getUserCoupons,\r\n                removeUserCoupon,\r\n                addCoupons,\r\n                deleteCoupon,\r\n                updateCoupons,\r\n                addUserCoupons,\r\n                updateCouponState,\r\n                setAlert,\r\n                setShowFav,\r\n                setShowCouponDetails,\r\n                setCategoryFilter\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CouponContext.Provider >\r\n    )\r\n}\r\n\r\nexport default CouponState;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CouponState from './context/CouponState';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CouponState>\r\n      <App />\r\n    </CouponState>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}